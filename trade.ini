
[Common]
algo_threads_count = 1
algo_update_period_ms = 100
trade_session_period_edt=09:30:00-15:58:00
level2_period_seconds = 15
level2_snapshot_print_time_seconds = 5	// 0 - disabled
min_price = 10.01
interactive_brokers_tws_client_id = 1
interactive_brokers_tws_ip_address = 127.0.0.1	// 23.23.216.3, 127.0.0.1
iqlink_ip_address = 127.0.0.1
iqlink_full_log = yes

[Py.Test]
algo = SimpleExampleTradeAlgo	// Strategy Python class name, must be derived from trader.Algo
name = Py API Test
tag = py-api-simple-example
level2_data_source = Interactive Brokers	// possible values: IQFeed, Interactive Brokers, none
script_file_path = TraderPyApiExample.py
script_file_stamp = 	// set/change any value to reload ${script_file_path} without service restart
symbols = symbols.ini

[MarketData.Request]
symbols = symbols.ini

[Strategy.Quick Arbitrage Ask-Bid]
algo = QuickArbitrage.AskBid
tag = quick-arbitrage-ab
open_mode = short_if_ask>bid	// possible values: none, short_if_ask>bid, short_if_bid>ask
longs_enabled = true
shorts_enabled = false
open_order_type = IOC	// possible values: IOC (t/p and s/l), MKT (no s/l and t/p)
close_order_type = IOC	// possible values: IOC (t/p and s/l), MKT (no s/l and t/p)
position_time_seconds = 10
spread = 0.01	// ex.: 0.1% for percents, or 0.01 for penny
take_profit = 0.03	// from open price
stop_loss = 0.03	// from open price
volume = 10000.00
symbols = symbols.ini

[Strategy.Level II Market Arbitrage (Interactive Brokers data)]
algo = Level2MarketArbitrage
tag = level-2-arbitrage-ib
level2_data_source = Interactive Brokers	// possible values: IQFeed, Interactive Brokers
open_mode = short_if_bid>ask	// possible values: none, short_if_ask>bid (original), short_if_bid>ask
open_order_type = IOC	// possible values: IOC (t/p and s/l), MKT (no s/l and t/p)
close_order_type = MKT	// possible values: IOC (t/p and s/l), MKT (no s/l and t/p)
ask_bid_difference_percent_entry = 150
ask_bid_difference_percent_stop_loss = 120
position_min_time_seconds = 0
position_max_time_seconds = 0
take_profit = 0.03	// ex.: 0.1% for percents, or 0.01 for penny
volume = 10000.00
symbols = symbols.ini

[MarketData.Log.Symbols]

